"use strict";(self.webpackChunkhtml=self.webpackChunkhtml||[]).push([[31],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),h=r,u=m["".concat(l,".").concat(h)]||m[h]||d[h]||o;return t?a.createElement(u,i(i({ref:n},p),{},{components:t})):a.createElement(u,i({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},1515:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:9},i="T\u1ea1o Splash screen trong React Native",s={unversionedId:"splash-screen",id:"splash-screen",title:"T\u1ea1o Splash screen trong React Native",description:"Splash screen l\xe0 g\xec?",source:"@site/docs/splash-screen.md",sourceDirName:".",slug:"/splash-screen",permalink:"/react-native/splash-screen",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"C\u1ea5u h\xecnh Deeplink trong React Native",permalink:"/react-native/deeplink"}},l={},c=[{value:"Splash screen l\xe0 g\xec?",id:"splash-screen-l\xe0-g\xec",level:2},{value:"C\xe0i \u0111\u1eb7t Splash screen",id:"c\xe0i-\u0111\u1eb7t-splash-screen",level:2}],p={toc:c},m="wrapper";function d(e){let{components:n,...o}=e;return(0,r.kt)(m,(0,a.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"t\u1ea1o-splash-screen-trong-react-native"},"T\u1ea1o Splash screen trong React Native"),(0,r.kt)("h2",{id:"splash-screen-l\xe0-g\xec"},"Splash screen l\xe0 g\xec?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Trong React Native, splash screen (m\xe0n h\xecnh kh\u1edfi \u0111\u1ed9ng) l\xe0 m\u1ed9t h\xecnh \u1ea3nh ho\u1eb7c m\xe0n h\xecnh hi\u1ec3n th\u1ecb ng\u1eafn g\u1ecdn xu\u1ea5t hi\u1ec7n khi \u1ee9ng d\u1ee5ng \u0111\u01b0\u1ee3c kh\u1edfi ch\u1ea1y l\u1ea7n \u0111\u1ea7u ti\xean. N\xf3 th\u01b0\u1eddng xu\u1ea5t hi\u1ec7n trong th\u1eddi gian ng\u1eafn tr\u01b0\u1edbc khi \u1ee9ng d\u1ee5ng t\u1ea3i v\xe0 hi\u1ec3n th\u1ecb n\u1ed9i dung ch\xednh.")),(0,r.kt)("h2",{id:"c\xe0i-\u0111\u1eb7t-splash-screen"},"C\xe0i \u0111\u1eb7t Splash screen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"C\xe0i \u0111\u1eb7t th\u01b0 vi\u1ec7n sau:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-native-bootsplash\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"T\u1ea1o file ",(0,r.kt)("strong",{parentName:"li"},"src/logos/splash-logo.svg")," l\xe0 icon hi\u1ec3n th\u1ecb tr\xean splash screen:")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"1709045477280",src:t(4808).Z,width:"346",height:"476"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ti\u1ebfp theo, g\xf5 l\u1ec7nh sau \u0111\u1ec3 t\u1ea1o \u1ea3nh splash screen:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx react-native generate-bootsplash src/logos/splash-logo.svg --background=A8E6CF --logo-width=100\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Trong \u0111\xf3, ",(0,r.kt)("strong",{parentName:"li"},"background")," l\xe0 m\xe0u n\u1ec1n c\u1ee7a splash screen"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sau \u0111\xf3, v\xe0o file ",(0,r.kt)("strong",{parentName:"li"},"android/app/src/main/res/values/styles.xml")," v\xe0 th\xeam:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<resources xmlns:tools="http://schemas.android.com/tools"> \x3c!-- Add this xmlns:tools --\x3e\n\n    \x3c!-- Base application theme. --\x3e\n    <style name="AppTheme" parent="Theme.AppCompat.DayNight.NoActionBar">\n        \x3c!-- Customize your theme here. --\x3e\n        <item name="android:editTextBackground">@drawable/rn_edit_text_material</item>\n    </style>\n    \x3c!-- Add this style --\x3e\n    <style name="BootTheme" parent="Theme.BootSplash">\n        <item name="bootSplashBackground">@color/bootsplash_background</item>\n        <item name="bootSplashLogo">@drawable/bootsplash_logo</item>\n        <item name="postBootSplashTheme">@style/AppTheme</item>\n        <item name="android:statusBarColor" tools:targetApi="m">@color/bootsplash_background</item>\n        <item name="android:windowLightStatusBar" tools:targetApi="m">true</item>\n  </style>\n\n</resources>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ti\u1ebfp theo, v\xe0o file ",(0,r.kt)("strong",{parentName:"li"},"android/app/src/main/AndroidManifest.xml")," v\xe0 th\xeam:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest xmlns:android="http://schemas.android.com/apk/res/android">\n\n  \x3c!-- \u2026 --\x3e\n\n  <application\n    android:name=".MainApplication"\n    android:label="@string/app_name"\n    android:icon="@mipmap/ic_launcher"\n    android:roundIcon="@mipmap/ic_launcher_round"\n    android:allowBackup="false"\n    android:theme="@style/AppTheme"> \x3c!-- Apply @style/AppTheme on .MainApplication --\x3e\n    <activity\n      android:name=".MainActivity"\n      android:label="@string/app_name"\n      android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"\n      android:launchMode="singleTask"\n      android:windowSoftInputMode="adjustResize"\n      android:exported="true"\n      android:theme="@style/BootTheme"> \x3c!-- Apply @style/BootTheme on .MainActivity --\x3e\n      \x3c!-- \u2026 --\x3e\n    </activity>\n  </application>\n</manifest>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"V\xe0o ti\u1ebfp file ",(0,r.kt)("strong",{parentName:"li"},"android/app/src/main/java/com/yourprojectname/MainActivity.kt"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// add these required imports:\nimport android.os.Bundle\nimport com.zoontek.rnbootsplash.RNBootSplash\n\nclass MainActivity : ReactActivity() { {\n\n  // \u2026\n\n  override fun onCreate(savedInstanceState: Bundle?) {\n    RNBootSplash.init(this, R.style.BootTheme) // \u2b05\ufe0f initialize the splash screen\n    super.onCreate(savedInstanceState) // super.onCreate(null) with react-native-screens\n  }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cu\u1ed1i c\xf9ng trong file ",(0,r.kt)("strong",{parentName:"li"},"RootNavigator.tsx"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { SafeAreaProvider } from "react-native-safe-area-context";\nimport BootSplash from "react-native-bootsplash";\n\nimport { NavigationContainer } from "@react-navigation/native";\nimport GlobalNavigation, {\n  navigationRef,\n} from "@src/configs/navigation.config";\nimport { createStackNavigator } from "@react-navigation/stack";\nimport { ERootScreenList } from "@src/navigators/screens-name";\nimport HomepageScreen from "@src/screens/home";\nimport ContactScreen from "@src/screens/contact";\nimport SettingScreen from "@src/screens/setting";\nimport styles from "./styles";\nimport { ChevronLeftIcon } from "@src/assets/icons";\nimport linking from "@src/configs/deeplink.config";\n\nconst Stack = createStackNavigator();\n\nconst RootNavigator = () => {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer\n        ref={navigationRef}\n        linking={linking}\n        onReady={() => {\n          BootSplash.hide({ fade: true }); // Add this options in NavigationContainer component\n        }}\n      >\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            headerTitleAlign: "center",\n            headerTitleStyle: styles.title,\n            headerStyle: styles.header,\n            headerLeft: () => (\n              <ChevronLeftIcon\n                style={{ marginLeft: 10 }}\n                onPress={() => GlobalNavigation.goBack()}\n              />\n            ),\n          }}\n        >\n          <Stack.Screen\n            name={ERootScreenList.HOME}\n            component={HomepageScreen}\n            options={{\n              headerShown: true,\n              headerTitle: "Homepage",\n            }}\n          />\n          <Stack.Screen\n            name={ERootScreenList.CONTACT}\n            component={ContactScreen}\n            options={{\n              headerShown: true,\n              headerTitle: "Contact",\n            }}\n          />\n          <Stack.Screen\n            name={ERootScreenList.SETTING}\n            component={SettingScreen}\n            options={{\n              headerShown: true,\n              headerTitle: "Setting",\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n};\n\nexport default RootNavigator;\n')))}d.isMDXComponent=!0},4808:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/1709045477280-0f328320200fee2e12a7f234736ec7ba.png"}}]);